#!/bin/bash
# Script de mise √† jour du syst√®me audio pour Raspberry Pi 5
# Am√©lioration de la qualit√© STT

echo "üîß Mise √† jour du syst√®me audio pour AI Robot"
echo "============================================"

# V√©rifier si on est sur un Raspberry Pi
if [ ! -f /proc/device-tree/model ]; then
    echo "‚ö†Ô∏è  Ce script est con√ßu pour Raspberry Pi"
    exit 1
fi

# Mise √† jour du syst√®me
echo "üì¶ Mise √† jour des paquets syst√®me..."
sudo apt-get update

# Installation des d√©pendances pour scipy
echo "üì¶ Installation des d√©pendances pour scipy..."
sudo apt-get install -y libatlas-base-dev gfortran

# Installation des outils audio
echo "üì¶ Installation des outils audio..."
sudo apt-get install -y alsa-utils pulseaudio pulseaudio-utils

# Configuration ALSA pour optimiser l'audio
echo "üé§ Configuration ALSA..."
cat > ~/.asoundrc << 'EOF'
# Configuration ALSA optimis√©e pour l'enregistrement
pcm.!default {
    type asym
    playback.pcm "plughw:0,0"
    capture.pcm "mic"
}

pcm.mic {
    type plug
    slave {
        pcm "hw:1,0"  # Ajuster selon votre configuration
        rate 16000
        channels 1
        format S16_LE
    }
}

# R√©duction du bruit mat√©riel
pcm.mic_boost {
    type softvol
    slave.pcm "mic"
    control {
        name "Mic Boost"
        card 1
    }
    min_dB -5.0
    max_dB 20.0
    resolution 100
}
EOF

# Test des p√©riph√©riques audio
echo "üîç P√©riph√©riques audio d√©tect√©s:"
arecord -l

# Mise √† jour des d√©pendances Python
echo "üì¶ Mise √† jour des d√©pendances Python..."
pip install --upgrade pip
pip install --upgrade -r requirements_pi.txt

# Test du microphone
echo "üé§ Test du microphone..."

# D√©tection du bon p√©riph√©rique
DEFAULT_DEVICE=$(arecord -l | grep -E "card [0-9]+" | head -n1 | sed -E 's/card ([0-9]+):.*/\1/')
if [ -z "$DEFAULT_DEVICE" ]; then
    echo "‚ö†Ô∏è  Aucun p√©riph√©rique audio trouv√©"
    echo "   V√©rifiez que votre microphone est bien connect√©"
else
    echo "   Utilisation du p√©riph√©rique: card $DEFAULT_DEVICE"
    echo "   Parlez maintenant pour tester le niveau audio (5 secondes)..."
    arecord -D plughw:${DEFAULT_DEVICE},0 -f S16_LE -r 16000 -c 1 -d 5 test_audio.wav 2>/dev/null
    if [ $? -eq 0 ]; then
        echo "‚úì Enregistrement termin√©"
        
        # Analyse du niveau audio
        if [ -f test_audio.wav ]; then
            if command -v sox &> /dev/null; then
                echo "üìä Analyse du niveau audio:"
                sox test_audio.wav -n stats 2>&1 | grep -E "Maximum amplitude|RMS"
            else
                echo "‚ÑπÔ∏è  Installez sox pour l'analyse audio: sudo apt-get install sox"
            fi
            # Nettoyage
            rm -f test_audio.wav
        fi
    else
        echo "‚ö†Ô∏è  Erreur lors de l'enregistrement. Essayez avec un microphone USB externe."
    fi
fi

echo ""
echo "‚úÖ Mise √† jour termin√©e!"
echo ""
echo "üìã Prochaines √©tapes:"
echo "1. Red√©marrez le client: python3 client.py"
echo "2. Le syst√®me va automatiquement calibrer le bruit ambiant"
echo "3. Surveillez les indicateurs SNR (Signal-to-Noise Ratio)"
echo ""
echo "üí° Conseils pour am√©liorer la qualit√©:"
echo "- Utilisez un microphone USB externe si possible"
echo "- √âloignez le microphone des sources de bruit"
echo "- Parlez clairement √† 20-30cm du microphone"
echo "- Un SNR > 10dB est recommand√© pour une bonne transcription"
